/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.projecttracker.report.db.entities;
// Generated Feb 11, 2010 12:17:36 PM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Travel generated by hbm2java.
 *
 * @version  $Revision$, $Date$
 */
@Entity
@Table(
    name = "travel",
    schema = "public"
)
public class Travel extends BasicHibernateEntity {

    //~ Instance fields --------------------------------------------------------

    private Staff staff;
    private Project project;
    private double grossprice;
    private double netprice;
    private double allowablevat;
    private Date date;
    private String destination;
    private String description;
    private String storagelocation;
    private Date paymentdate;
    private Set<TravelDocument> traveldocuments = new HashSet<TravelDocument>(0);

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new Travel object.
     */
    public Travel() {
    }

    /**
     * Creates a new Travel object.
     *
     * @param  id           DOCUMENT ME!
     * @param  staff        DOCUMENT ME!
     * @param  grossprice   DOCUMENT ME!
     * @param  netprice     DOCUMENT ME!
     * @param  date         DOCUMENT ME!
     * @param  destination  DOCUMENT ME!
     */
    public Travel(final long id,
            final Staff staff,
            final double grossprice,
            final double netprice,
            final Date date,
            final String destination) {
        this.id = id;
        this.staff = staff;
        this.grossprice = grossprice;
        this.netprice = netprice;
        this.date = date;
        this.destination = destination;
    }

    /**
     * Creates a new Travel object.
     *
     * @param  id               DOCUMENT ME!
     * @param  staff            DOCUMENT ME!
     * @param  grossprice       DOCUMENT ME!
     * @param  netprice         DOCUMENT ME!
     * @param  allowablevat     DOCUMENT ME!
     * @param  date             DOCUMENT ME!
     * @param  destination      DOCUMENT ME!
     * @param  description      DOCUMENT ME!
     * @param  storagelocation  DOCUMENT ME!
     * @param  paymentdate      DOCUMENT ME!
     * @param  traveldocuments  DOCUMENT ME!
     * @param  project          DOCUMENT ME!
     */
    public Travel(final long id,
            final Staff staff,
            final double grossprice,
            final double netprice,
            final double allowablevat,
            final Date date,
            final String destination,
            final String description,
            final String storagelocation,
            final Date paymentdate,
            final Set<TravelDocument> traveldocuments,
            final Project project) {
        this.id = id;
        this.staff = staff;
        this.grossprice = grossprice;
        this.netprice = netprice;
        this.allowablevat = allowablevat;
        this.date = date;
        this.destination = destination;
        this.description = description;
        this.storagelocation = storagelocation;
        this.paymentdate = paymentdate;
        this.traveldocuments = traveldocuments;
        this.project = project;
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "staffid",
        nullable = false
    )
    public Staff getStaff() {
        return this.staff;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  staff  DOCUMENT ME!
     */
    public void setStaff(final Staff staff) {
        this.staff = staff;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "projectid",
        nullable = false
    )
    public Project getProject() {
        return this.project;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  project  DOCUMENT ME!
     */
    public void setProject(final Project project) {
        this.project = project;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(
        name = "grossprice",
        nullable = false,
        precision = 10
    )
    public double getGrossprice() {
        return this.grossprice;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  grossprice  DOCUMENT ME!
     */
    public void setGrossprice(final double grossprice) {
        this.grossprice = grossprice;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(
        name = "netprice",
        nullable = false,
        precision = 10
    )
    public double getNetprice() {
        return this.netprice;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  netprice  DOCUMENT ME!
     */
    public void setNetprice(final double netprice) {
        this.netprice = netprice;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(
        name = "allowablevat",
        precision = 10
    )
    public double getAllowablevat() {
        return this.allowablevat;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  allowablevat  DOCUMENT ME!
     */
    public void setAllowablevat(final double allowablevat) {
        this.allowablevat = allowablevat;
    }
    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(
        name = "date",
        nullable = false,
        length = 29
    )
    public Date getDate() {
        return this.date;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  date  DOCUMENT ME!
     */
    public void setDate(final Date date) {
        this.date = date;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(
        name = "destination",
        nullable = false,
        length = 50
    )
    public String getDestination() {
        return this.destination;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  destination  DOCUMENT ME!
     */
    public void setDestination(final String destination) {
        this.destination = destination;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  description  DOCUMENT ME!
     */
    public void setDescription(final String description) {
        this.description = description;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Column(
        name = "storagelocation",
        length = 100
    )
    public String getStoragelocation() {
        return this.storagelocation;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  storagelocation  DOCUMENT ME!
     */
    public void setStoragelocation(final String storagelocation) {
        this.storagelocation = storagelocation;
    }
    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(
        name = "paymentdate",
        length = 29
    )
    public Date getPaymentdate() {
        return this.paymentdate;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  paymentdate  DOCUMENT ME!
     */
    public void setPaymentdate(final Date paymentdate) {
        this.paymentdate = paymentdate;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @OneToMany(
        cascade = CascadeType.ALL,
        fetch = FetchType.LAZY,
        mappedBy = "travel"
    )
    public Set<TravelDocument> getTraveldocuments() {
        return this.traveldocuments;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  traveldocuments  DOCUMENT ME!
     */
    public void setTraveldocuments(final Set<TravelDocument> traveldocuments) {
        this.traveldocuments = traveldocuments;
    }
}
